
var pulseController = pulseapp.controller('pulseController', function ($rootScope,$scope,$state,PulseData,$animate,ngProgressFactory,fileUpload,$mdDialog) {

		$rootScope.userId=sessionStorage.getItem("P_user");
		$scope.username=sessionStorage.getItem("P_user_name");
		$scope.Status=sessionStorage.getItem("State");
		$rootScope.categoryId=sessionStorage.getItem("P_cat_id");
		$rootScope.ImageUrl="http://mobileserver.flextronics.com:3006/"
		$rootScope.ActionTracker=[{'categoryId':18},{'category_name':'Action Tracker'},{'category_type':'Action'},{'category_icon_url':'http://mobileserver.flextronics.com/pulsenavigation/images/sideicons/action_tracker.png'}];
		$scope.categoryList = [];
		$scope.reportDisplay;
		$rootScope.userStatus="Admin";
		$scope.favDisplay;
		$scope.SelectedIndex=0;
		$scope.SelectedIndexreport;
		$scope.SelectedIndexlink;
		$scope.tabTitle="";
		$scope.CurrentTab='';
		//$scope.arr=[{'title_readmore':'Support '},{'description_readmore':''}];
		$scope.customFullscreen = false;
		$rootScope.categoryIcon='http://mobileserver.flextronics.com/pulsenavigation/images/sideicons/demand.png';

		$rootScope.favouriteFilter='';
		$scope.tab;

		$scope.reportlist = function (categoryType){
			console.log($scope.CurrentTab);

			if(categoryType== null || categoryType== 'null'){
				categoryType='report';
			}


			$scope.scrollbarConfig = {
							theme: 'dark',
							scrollInertia: 500
						}
				sessionStorage.setItem("State",categoryType);
				$scope.tab = categoryType;
	// $scope.categoryList = [];
	// 		$rootScope.favouriteList=[];

				switch (categoryType) {
						case 'report':
							if($scope.CurrentTab!='Reports'){

							$scope.categoryList = [];
							$scope.CurrentTab='Reports';
							$scope.requestParam={category_type :'report'};
							$scope.reportDisplay=true;
							$scope.requestType="getCategory";
							$scope.tabTitle="VISUALIZATIONS";
							$scope.SelectedIndex=0;
							PulseData.getdata($scope.requestParam,$scope.requestType,$scope.OnSuccessReportlist,$scope.OnfailureReportlist);

							}
							break;
						case 'links':

							if($scope.CurrentTab!='Links'){
							$scope.categoryList = [];
							$scope.requestParam={category_type :'common'};
							$scope.CurrentTab='Links';
							$scope.requestType="getCategory";
							$scope.tabTitle="LINKS";
							$scope.SelectedIndex=0;
							PulseData.getdata($scope.requestParam,$scope.requestType,$scope.OnSuccessReportlist,$scope.OnfailureReportlist)
							$scope.reportDisplay=true;
							}
							break;
						case 'favourites':
							if($scope.CurrentTab!='Favourites'){
							$rootScope.favouriteList=[];
							//$scope.requestParam={category_type :'common'};
							$rootScope.favouriteFilter='';
							$scope.CurrentTab='Favourites';
							$scope.reportDisplay=false;
							$scope.SelectedIndex="All";
							$scope.tabTitle="FAVORITES";
							$scope.SelectedIndexreport='none';
							$scope.SelectedIndexlink='none';
							$state.go('home.'+$scope.tab);
						}
							break;
						default:

				}
		}

		$scope.fileUploadMethod = function(e){
				var file = $scope.myFile;
           var uploadUrl = "http://mobileserver.flextronics.com:3006/savedata";
           fileUpload.uploadFileToUrl(file);
		}




		$scope.OnSuccessReportlist = function(response) {


			$scope.categoryList=response.data.files;
			console.log(response.data.files[0].category_id);
			$rootScope.categoryId=response.data.files[0].category_id;
			PulseData.setCatId(response.data.files[0].category_id);
			PulseData.setCategoryTitle(response.data.files[0].category_name);
			PulseData.setCategoryIcon(response.data.files[0].category_icon_url);
		 	$scope.progressbar.complete();
		 	if($scope.reload==true){
				$scope.reload=false;
				 $rootScope.$emit("reload-report");
			}
		 	$state.go('home.'+$scope.tab );
			//window.location.hash="/"+$scope.tab;


		}

		$scope.OnfailureReportlist = function(response) {

			console.log("Category List HTTP Fail");
			$scope.progressbar.complete();

		}

		$scope.categoryListClick = function(categoryId,categoryName,categoryIconUrl,$index,listype) {


				if(listype=='action'){

					$scope.SelectedIndex='actiontracker';
				}else{
					 $scope.SelectedIndex=$index;
				}
			 $scope.progressbar.start();

			 console.log($scope.SelectedIndex);
		//	 PulseData.setCatId(categoryId);
			 $rootScope.$emit("CallParentMethod",categoryId,categoryName,categoryIconUrl);
		}

		$scope.favFilter = function(x,$index,listype){
$scope.SelectedIndexreport='none';
$scope.SelectedIndexlink='none';
			//$rootScope.favAnime=false;
			if(listype=='reports'){

				$scope.SelectedIndexreport=$index;

			}else if(listype=='links'){

				$scope.SelectedIndexlink=$index;
			}
			$rootScope.favouriteFilter=x.category_id;
			$scope.SelectedIndex='';
			PulseData.setCategoryTitle(x.category_name);
			PulseData.setCategoryIcon(x.category_icon_url);
			console.log($rootScope.favAnime);

		}

		$scope.emptyChange = function (){
		//	$rootScope.favAnime=false;
			PulseData.setFavouriteFilter('');
			PulseData.setCategoryTitle("All");
			$scope.SelectedIndex='All';
			$scope.SelectedIndexreport='none';
			$scope.SelectedIndexlink='none';
			PulseData.setCategoryIcon("images/sideicons/icon1.png");
			console.log($rootScope.favAnime);
		}


	  $scope.logout = function(){

	  	sessionStorage.clear();
	  	$state.go('login');
	  }


	 $scope.help = function(ev) {
    $mdDialog.show({

      templateUrl: 'templates/Help.html',
      controller: helpController,
      parent: angular.element(document.body),
      targetEvent: ev,
      clickOutsideToClose:true,
      fullscreen: $scope.customFullscreen // Only for -xs, -sm breakpoints.
    })
  };

   function helpController($scope, $mdDialog) {
    $scope.cancel = function() {
      $mdDialog.cancel();
    };
}
	
	$scope.delete = function(ev,x) {
  	$rootScope.delVal='Category';
    $mdDialog.show({

      templateUrl: 'templates/Delete.html',
      controller: 'deleteController',
      parent: angular.element(document.body),
      locals:{item:x},
      targetEvent: ev,
      clickOutsideToClose:true,
      fullscreen: $scope.customFullscreen // Only for -xs, -sm breakpoints.
    })
  };
	


$rootScope.$on("reload", function(){
	$scope.reload=true;
	$scope.CurrentTab='';
	$scope.reportlist(sessionStorage.getItem("State"));


});


  $scope.add = function(ev) {
    $mdDialog.show({

      templateUrl: 'templates/add.html',
      controller: 'addController',
      parent: angular.element(document.body),
      locals:{value:'Category',type:sessionStorage.getItem("State")},
      targetEvent: ev,
      clickOutsideToClose:true,
      fullscreen: $scope.customFullscreen // Only for -xs, -sm breakpoints.
    })
  };


  $scope.edcon = function(ev,x) {
    $mdDialog.show({

      templateUrl: 'templates/add.html',
   controller: 'editController',
      parent: angular.element(document.body),
      locals:{item:x,value:'Category'},
      targetEvent: ev,
      clickOutsideToClose:true,
      fullscreen: $scope.customFullscreen // Only for -xs, -sm breakpoints.
    })
  };

		$scope.init= function() {

			if(sessionStorage.getItem("P_user")){

 			$scope.progressbar = ngProgressFactory.createInstance();
        	$scope.progressbar.start();
			$scope.reportlist($scope.Status);

			}else{

				$state.go('login');

			}

			$scope.$on('$locationChangeStart', function(event, next, current){
	    	// Here you can take the control and call your own functions:
	  		//  alert(current+ "asdfasdf"+ next);
			console.log(current+ "asdfasdf"+ next);

	    // Prevent the browser default action (Going back):
	    event.preventDefault();

	});


		//$scope.reportlist('report');



		$scope.$on('$locationChangeStart', function(event, next, current){
		    // Here you can take the control and call your own functions:
		  //  alert(current+ "asdfasdf"+ next);
				console.log(current+ "asdfasdf"+ next);

		    // Prevent the browser default action (Going back):
		    event.preventDefault();

		});
	}


	$scope.init();



});
